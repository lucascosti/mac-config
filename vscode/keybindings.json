// Place your key bindings in this file to override the defaultsauto[]
[
  // Cmd+arrows for text navigation
  {
    "key": "cmd+left",
    "command": "cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "-cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+left",
    "command": "-cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+left",
    "command": "-workbench.action.terminal.moveToLineStart",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+left",
    "command": "-cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+left",
    "command": "cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "-cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+right",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "-cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+right",
    "command": "-cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+right",
    "command": "-workbench.action.terminal.moveToLineEnd",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+right",
    "command": "cursorWordStartRightSelect"
  },
  {
    "key": "shift+alt+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  // Cmd+delete/backspace for removing words
  {
    "key": "cmd+delete",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+delete",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+delete", // this deletes the word to right of the cursor in the terminal
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001bd" }, //  =  escape+d (not sure why it's this)
    "when": "terminalFocus"
  },
  {
    "key": "alt+delete",
    "command": "-deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+backspace", // this deletes the word to left of the cursor in the terminal
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b\u007f" }, //  =  escape+delete (not sure why it's this)
    "when": "terminalFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+backspace",
    "command": "-deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  // Ctrl+w to toggle word wrap
  {
    "key": "ctrl+w",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  // Ctrl+l to toggle the bottom panel
  {
    "key": "ctrl+l",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  // Cmd+y for redo
  {
    "key": "cmd+y",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+z",
    "command": "-redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+y",
    "command": "editor.action.webvieweditor.redo",
    "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+cmd+z",
    "command": "-editor.action.webvieweditor.redo",
    "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "cmd+y",
    "command": "editor.action.customEditor.redo",
    "when": "focusedCustomEditorIsEditable && !inputFocus"
  },
  {
    "key": "shift+cmd+z",
    "command": "-editor.action.customEditor.redo",
    "when": "focusedCustomEditorIsEditable && !inputFocus"
  },
  // ctrl+s for bringing up the spell check menu
  {
    "key": "ctrl+s",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  // Cmd+f2 to toggle bookmarks
  {
    "key": "cmd+f2",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+f2",
    "command": "-editor.action.changeAll",
    "when": "editorTextFocus && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  // F2 to jump between bookmarks
  {
    "key": "f2",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  // Ctrl+m to show markdown preview
  {
    "key": "ctrl+m",
    "command": "markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  // Cmd+o to show quick open dialog
  {
    "key": "cmd+o",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  // Cmd+t to open new blank file
  {
    "key": "cmd+t",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  // Cmd+r to reload the window
  {
    "key": "cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  // Ctrl+b for git blame
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame"
  },
  {
    "key": "ctrl+b",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  // Cmd+k for markdown-style link
  {
    "key": "cmd+k",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "[${TM_SELECTED_TEXT}]($1)"
    }
  },
  // Markdown shortcuts keybindings
  {
    "key": "cmd+b",
    "command": "md-shortcut.toggleBold",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+b",
    "command": "-md-shortcut.toggleBold",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+i",
    "command": "md-shortcut.toggleItalic",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+i",
    "command": "-md-shortcut.toggleItalic",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+m cmd+c",
    "command": "md-shortcut.toggleCodeBlock",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+c",
    "command": "-md-shortcut.toggleCodeBlock",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+m cmd+1",
    "command": "md-shortcut.toggleNumbers",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+1",
    "command": "-md-shortcut.toggleNumbers",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+m cmd+x",
    "command": "md-shortcut.toggleCheckboxes",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+x",
    "command": "-md-shortcut.toggleCheckboxes",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+m cmd+b",
    "command": "md-shortcut.toggleBullets",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+b",
    "command": "-md-shortcut.toggleBullets",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  // Rename file in explorer panel as F2
  {
    "key": "f2",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // 'Open file under cursor' extension as ctrl+p
  {
    "key": "ctrl+p",
    "command": "seito-openfile.openFileFromText",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+p",
    "command": "-seito-openfile.openFileFromText",
    "when": "editorTextFocus"
  },
  // Close all editors
  {
    "key": "ctrl+cmd+w",
    "command": "-workbench.action.toggleTabsVisibility"
  },
  {
    "key": "ctrl+cmd+w",
    "command": "workbench.action.closeAllEditors"
  },
  // Copilot accept next word suggestion. You must first disable the macOS default keybinding for this combination to work (Mission Control move to next space)
  {
    "key": "ctrl+right",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "cmd+right",
    "command": "-editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  }
]
